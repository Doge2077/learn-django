"""
Django settings for Learn_django project.

Generated by 'django-admin startproject' using Django 4.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

import os
import sys

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

sys.path.insert(0, os.path.join(BASE_DIR, 'apps'))  # 在项目文件夹下定位 apps 的路径

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-y!gt1=s3apm-%-*4nf8je61vh7@i*71=z+$g3u-j6w83f!j3cm'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'App_01',
    'App_02.apps.App02Config',
    'App_03',
    'App_04',
    'App_05',
    'App_06',
    'App_07',
    'App_08',
    'App_09',
    'rest_framework',  # 注册 DRF 框架
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # 'App_05.middleware.self_middleware'
]

ROOT_URLCONF = 'Learn_django.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'Learn_django.wsgi.application'

# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',  # 设置数据库为 mysql
        'HOST': '127.0.0.1',  # 数据库主机名
        'PORT': 3306,  # 数据库端口号
        'USER': 'root',  # 数据库用户
        'PASSWORD': '023017lys',  # 数据库密码
        'NAME': 'learn_django'  # 创建数据库的名称
    }
}

# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/
LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = 'static/'

# 指定 static 静态文件地址
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static')
]

MEDIA_URL = 'media/'

# 指定 media 文件夹的路径
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# 配置Redis缓存的信息
CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://127.0.0.1:6379/0",
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
        }
    }
}

SESSION_ENGINE = 'django.contrib.sessions.backends.cache'  # 指定以缓存的方式存储session
SESSION_CACHE_ALIAS = "default"  # 指定缓存的默认Redis库

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# DRF 框架配置信息
REST_FRAMEWORK = {
    # 设置响应渲染类
    'DEFAULT_RENDERER_CLASSES': (  # 默认响应渲染类
        'rest_framework.renderers.JSONRenderer',  # json渲染器
        'rest_framework.renderers.BrowsableAPIRenderer',  # 浏览API渲染器
    ),
    # 配置用户信息认证（全局认证）
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.BasicAuthentication',    # 基本认证
        'rest_framework.authentication.SessionAuthentication',  # session 认证
    ),
    # 配置用户的权限信息
    'DEFAULT_PERMISSION_CLASSES': (

        # # AllowAny 允许所有用户
        # 'rest_framework.permissions.AllowAny',
        #
        # # IsAuthenticated 仅通过认证的用户
        'rest_framework.permissions.IsAuthenticated',
        #
        # # IsAdminUser 仅管理员用户
        # 'rest_framework.permissions.IsAdminUser',
        #
        # # IsAuthenticatedOrReadOnly 认证的用户可以完全操作，否则只能get读取
        # 'rest_framework.permissions.IsAuthenticatedOrReadOnly',
    ),
    # 限流配置（全局配置）
    'DEFAULT_THROTTLE_CLASSES': (
        'rest_framework.throttling.AnonRateThrottle',  # 匿名用户
        'rest_framework.throttling.UserRateThrottle'  # 认证用户
    ),
    'DEFAULT_THROTTLE_RATES': {
        'anon': '100/day',  # 匿名用户的限流标准 24h 内 100 次访问
        'user': '1000/day'  # 认证用户的限流标准
    },

    # 配置分页信息（全局配置）
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 100,  # 每页数据的条目数量

    # 配置异常处理
    'EXCEPTION_HANDLER': 'my_project.my_app.utils.custom_exception_handler',

    # 生成接口文档
    'DEFAULT_SCHEMA_CLASS': 'rest_framework.schemas.coreapi.AutoSchema',
}
